<?php

/**
 * @file
 * Hook implementations for the campaignion_overlay module.
 */

include_once 'campaignion_overlay.features.inc';

/**
 * Implements hook_theme().
 */
function campaignion_overlay_theme($existing, $type, $theme, $path) {
  $hooks['campaignion_overlay_options'] = [
    'template' => 'campaignion-overlay-options',
    'variables' => [
      'introduction' => NULL,
      'content' => NULL,
    ],
  ];
  return $hooks;
}

/**
 * Implements hook_field_collection_item_view_alter().
 *
 * Custom rendering for campaignion_overlay_options field collection items.
 */
function campaignion_overlay_field_collection_item_view_alter(&$build) {
  if ($build['#bundle'] === 'campaignion_overlay_options') {
    $element = [
      '#theme' => 'campaignion_overlay_options',
      '#introduction' => $build['campaignion_overlay_introduction'],
    ];
    $item = entity_metadata_wrapper('field_collection_item', $build['#entity']);
    if ($node = $item->campaignion_overlay_content->value()) {
      $element['#content'] = drupal_get_form('webform_client_form_' . $node->nid, $node, []);
    }
    $element['#attached']['library'][] = ['system', 'ui.dialog'];
    $element['#access'] = (bool) $item->campaignion_overlay_enabled->value();
    $build = $element;
  }
}

/**
 * Implements hook_views_pre_view().
 */
function campaignion_overlay_views_pre_view(&$view, &$display_id, &$args) {
  if ($view->name != 'actions_reference') {
    return;
  }
  // If the field doesnâ€™t exist views removes it from the data structure before
  // calling this hook. In this case we still want to display the node title.
  // The prettier solution would be to do it the other way round (only add the
  // field_admin_title field if it is present), but that seems way more
  // complicated because the data structure in this hook is already processed.
  if ($view->field && !isset($view->field['field_admin_title'])) {
    $view->field['title']->options['exclude'] = FALSE;
  }
}
