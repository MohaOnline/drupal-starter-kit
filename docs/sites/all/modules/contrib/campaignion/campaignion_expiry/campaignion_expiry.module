<?php

/**
 * @file
 * Hook and callback implementations for this module.
 */

use Drupal\campaignion_expiry\ContactCron;
use Drupal\campaignion_expiry\SubmissionCron;
use Drupal\campaignion_expiry\Anonymizer;
use Drupal\little_helpers\Services\Container;

/**
 * Helper function to load cron services and invoke them.
 */
function _campaignion_expiry_run($service) {
  Container::get()->loadService($service)->run();
}

/**
 * Implements hook_little_helpers_services().
 */
function campaignion_expiry_little_helpers_services() {
  $info['campaignion_expiry.SubmissionCron'] = [
    'class' => SubmissionCron::class,
    'arguments' => [
      '!campaignion_expiry_cron_time_limit',
      '!campaignion_expiry_submission_time_frame',
    ],
  ];
  $info['campaignion_expiry.ContactCron'] = [
    'class' => ContactCron::class,
    'arguments' => [
      '@campaignion_expiry.Anonymizer',
      '!campaignion_expiry_cron_time_limit',
      '!campaignion_expiry_contact_time_frame',
    ],
  ];
  $info['campaignion_expiry.Anonymizer'] = [
    'class' => Anonymizer::class,
    'arguments' => [
      '!campaignion_expiry_contact_keep_mp_data',
    ],
  ];
  return $info;
}

/**
 * Implements hook_cronapi().
 */
function campaignion_expiry_cronapi($op, $job = NULL) {
  $items['campaignion_expiry_webform_submissions'] = [
    'description' => 'Expire webform submissions',
    'rule' => '0+@ 0-6 * * *',
    'weight' => 100,
    'callback' => '_campaignion_expiry_run',
    'arguments' => ['campaignion_expiry.SubmissionCron'],
  ];
  $items['campaignion_expiry_contacts'] = [
    'description' => 'Expire contacts',
    'rule' => '0+@ 0-6 * * *',
    'weight' => 100,
    'callback' => '_campaignion_expiry_run',
    'arguments' => ['campaignion_expiry.ContactCron'],
  ];
  return $items;
}
